var searchIndex = JSON.parse('{\
"chat_flame_backend":{"doc":"Chat Flame Backend Library","t":"AAAAAAADDDNDEDDDDNDNDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLMMMMLLLLLLLLLLLLMMMMMMMLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMMDLLLLLLLLLLLLLACACACCCAAFFFFFDLLMLLLLLLLLLLLLFMMLLLLLNENNLLLLLLLLALLAAAAAAALLLLDLLLLLLLLLLLLLLMMMMLMLMLLLLFFDILLLLLLKLLLLLLLLLNNNNNNNNNNNNNNNENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDILLLLLLLLLLKLLLLLDLLFLLLLLLLLLLLLLNDEIGNLLLLLLLLLLLLLLKLLLLLLKLLLLLLLLLNNDEIGLLLLLLLLLLALLLLKLLLLLLKLLLLLLLLLDLLLLLLLLLLLLLLLF","n":["api","config","llm","server","model","openapi","routes","BestOfSequence","CompatGenerateRequest","Details","EosToken","ErrorResponse","FinishReason","GenerateParameters","GenerateRequest","GenerateResponse","Info","Length","PrefillToken","StopSequence","StreamDetails","StreamResponse","Token","best_of","best_of_sequences","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decoder_input_details","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","details","details","do_sample","docker_label","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","error","error_type","finish_reason","finish_reason","finish_reason","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","generated_text","generated_text","generated_text","generated_tokens","generated_tokens","generated_tokens","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","logprob","logprob","max_batch_total_tokens","max_best_of","max_concurrent_requests","max_input_length","max_new_tokens","max_stop_sequences","max_total_tokens","max_waiting_tokens","model_device_type","model_dtype","model_id","model_pipeline_tag","model_sha","parameters","parameters","prefill","prefill","repetition_penalty","return_full_text","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","seed","seed","seed","seed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sha","special","stop","stream","temperature","text","text","to_owned","to_owned","to_owned","to_owned","token","tokens","tokens","top_k","top_n_tokens","top_p","top_tokens","top_tokens","top_tokens","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typical_p","validation_workers","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting_served_ratio","watermark","ApiDoc","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","openapi","try_from","try_into","type_id","vzip","generate","generate_handler","generate_stream","generate_stream_handler","generate_text","generate_text_handler","get_health_handler","get_info_handler","health","info","generate_handler","generate_stream_handler","generate_text_handler","get_health_handler","get_info_handler","Config","borrow","borrow_mut","cache_dir","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","from_ref","init","into","load_config","model","port","to_owned","try_from","try_into","type_id","vzip","EosToken","FinishReason","Length","StopSequence","borrow","borrow_mut","deref","deref_mut","drop","eq","fmt","from","generate_parameter","init","into","loader","model_processor","models","sampler","text_generation","text_generator","token_generator","try_from","try_into","type_id","vzip","GenerateParameter","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","from_ref","init","into","max_new_tokens","repeat_last_n","repeat_penalty","seed","serialize","temperature","to_owned","top_p","try_from","try_into","type_id","vzip","create_model","create_tokenizer","DummyModelProcessor","ModelProcessor","borrow","borrow_mut","default","deref","deref_mut","drop","forward","forward","from","init","into","new","try_from","try_into","type_id","vzip","L13b","L13bChat","L13bCode","L34bCode","L70b","L70bChat","L7b","L7bChat","L7bCode","Leo13b","Leo7b","Mistral7b","Mistral7bInstruct","Mixtral","MixtralInstruct","Models","OpenChat35","Starling7bAlpha","Zephyr7bAlpha","Zephyr7bBeta","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_ref","from_str","init","into","is_mistral","is_open_chat","is_zephyr","repo_path","to_owned","tokenizer_repo","try_from","try_into","type_id","vzip","DummySampler","Sampler","borrow","borrow_mut","default","deref","deref_mut","drop","from","init","into","new","sample","sample","try_from","try_into","type_id","vzip","TextGeneration","borrow","borrow_mut","create_text_generation","deref","deref_mut","drop","from","init","into","new","run","run_stream","try_from","try_into","type_id","vzip","Finish","TextGenerator","TextGeneratorResult","TextGeneratorTrait","TextProbability","Token","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","from","from","init","init","init","init","into","into","new","next","next","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Finish","Token","TokenGenerator","TokenGeneratorResult","TokenGeneratorTrait","TokenProbability","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","dummy","eq","fmt","from","from","init","init","init","init","into","into","new","next","next","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DummyTokenGenerator","borrow","borrow_mut","deref","deref_mut","drop","from","init","init","into","new","next","try_from","try_into","type_id","vzip","server"],"q":[[0,"chat_flame_backend"],[4,"chat_flame_backend::api"],[7,"chat_flame_backend::api::model"],[312,"chat_flame_backend::api::openapi"],[326,"chat_flame_backend::api::routes"],[336,"chat_flame_backend::api::routes::generate"],[337,"chat_flame_backend::api::routes::generate_stream"],[338,"chat_flame_backend::api::routes::generate_text"],[339,"chat_flame_backend::api::routes::health"],[340,"chat_flame_backend::api::routes::info"],[341,"chat_flame_backend::config"],[365,"chat_flame_backend::llm"],[391,"chat_flame_backend::llm::generate_parameter"],[418,"chat_flame_backend::llm::loader"],[420,"chat_flame_backend::llm::model_processor"],[438,"chat_flame_backend::llm::models"],[487,"chat_flame_backend::llm::sampler"],[505,"chat_flame_backend::llm::text_generation"],[522,"chat_flame_backend::llm::text_generator"],[559,"chat_flame_backend::llm::token_generator"],[597,"chat_flame_backend::llm::token_generator::dummy"],[613,"chat_flame_backend::server"],[614,"core::result"],[615,"serde::de"],[616,"core::fmt"],[617,"core::fmt"],[618,"utoipa::openapi"],[619,"serde::ser"],[620,"core::any"],[621,"utoipa::openapi"],[622,"axum::json"],[623,"axum_core::response::into_response"],[624,"http::status"],[625,"core::error"],[626,"alloc::boxed"],[627,"std::path"],[628,"core::option"],[629,"candle_transformers::models::quantized_llama"],[630,"candle_core::device"],[631,"anyhow"],[632,"tokenizers::tokenizer"],[633,"candle_core::tensor"],[634,"candle_core::error"],[635,"alloc::string"],[636,"alloc::vec"],[637,"futures_core::stream"],[638,"candle_examples::token_output_stream"],[639,"std::collections::hash::set"],[640,"axum::routing"]],"d":["The <code>api</code> module contains the definitions and …","The <code>config</code> module manages the application’s …","The <code>llm</code> (Language Model) module contains the …","The <code>server</code> module is responsible for setting up and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Generate tokens","Generate tokens","Generate tokens","Health check endpoint","Endpoint to get model information","Configuration for the chat-flame-backend application.","","","Optional path to the directory where cache files are …","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Loads the application configuration from a YAML file.","Model to be used by the server.","Port number on which the server will listen.","","","","","","Generation stopped due to the model producing an …","Enumeration representing the reason why text generation …","Generation stopped because the maximum length was reached.","Generation stopped because a specified stop sequence was …","","","","","","","","Returns the argument unchanged.","Parameters for text generation.","","Calls <code>U::from(self)</code>.","Module for loading models.","Processor for language models.","Enumerations for supported models.","Sampling utilities for language models.","Main text generation logic.","Generator for text generation.","Token generator utilities.","","","","","Parameters used to generate samples.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Maximum number of new tokens to generate.","The number of last tokens to consider for applying the …","Penalty for repeating tokens.","Seed used for deterministic generation.","","Temperature for sampling.","","Nucleus sampling probability cutoff.","","","","","Creates and loads model weights from the Hugging Face Hub.","Creates and loads a tokenizer from the Hugging Face Hub.","A dummy implementation of <code>ModelProcessor</code> for testing …","A trait for processing model inputs and generating outputs.","","","","","","","Processes an input tensor and generates an output tensor.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new <code>DummyModelProcessor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","A dummy implementation of <code>Sampler</code> for testing purposes.","A trait for sampling a token based on logits output.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new <code>DummySampler</code>.","Samples a token based on provided logits.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Trait for text generation functionality.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,13,11,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,3,4,1,2,3,4,13,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,15,16,4,13,13,16,1,2,9,10,11,3,4,12,13,14,23,15,16,12,12,10,11,3,1,2,9,10,11,3,4,13,14,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,3,4,10,4,23,10,11,3,2,9,1,2,9,10,11,3,4,12,13,14,23,15,16,14,15,1,2,9,10,11,3,4,12,13,14,23,15,16,2,9,16,16,16,16,13,16,16,16,16,16,16,16,16,14,15,10,11,13,13,1,2,9,10,11,3,4,12,13,14,23,15,16,10,11,3,13,1,2,9,10,11,3,4,12,13,23,15,16,16,2,13,15,13,2,9,1,2,3,4,4,10,11,13,13,13,10,11,4,13,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,13,16,16,1,2,9,10,11,3,4,12,13,14,23,15,16,16,13,0,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,33,0,33,33,33,33,33,33,33,33,33,33,0,33,33,0,0,0,0,0,0,0,33,33,33,33,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,43,43,43,43,43,43,59,43,43,43,43,43,43,43,43,43,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,46,46,46,46,46,46,46,46,46,46,60,46,46,46,46,46,0,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,52,0,0,0,0,52,53,52,53,52,53,52,53,52,53,52,52,52,53,52,64,53,53,52,53,52,53,64,53,53,52,53,52,53,52,53,52,56,56,0,0,0,0,57,56,57,56,57,56,57,56,57,56,0,56,56,57,56,55,57,57,56,57,56,57,55,57,57,56,57,56,57,56,57,56,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[7,[1]]],8],[-1,[[7,[2]]],8],[-1,[[7,[9]]],8],[-1,[[7,[10]]],8],[-1,[[7,[11]]],8],[-1,[[7,[3]]],8],[-1,[[7,[4]]],8],[-1,[[7,[12]]],8],[-1,[[7,[13]]],8],[-1,[[7,[14]]],8],[-1,[[7,[15]]],8],[-1,[[7,[16]]],8],0,0,0,0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,[[1,17],18],[[2,17],18],[[9,17],18],[[10,17],18],[[11,17],18],[[3,17],18],[[4,17],18],[[13,17],18],[[14,17],18],[[15,17],18],[[16,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],0,0,0,0,[[1,-1],7,22],[[2,-1],7,22],[[9,-1],7,22],[[10,-1],7,22],[[11,-1],7,22],[[3,-1],7,22],[[4,-1],7,22],[[12,-1],7,22],[[13,-1],7,22],[[23,-1],7,22],[[15,-1],7,22],[[16,-1],7,22],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[],25],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[[27,[26]],[28,[15]]],[[0,[29]]]],[[[27,[26]],[28,[14]]],[[0,[29]]]],[[[27,[26]],[28,[14]]],[[0,[29]]]],[[],[[0,[29]]]],[[[27,[26]]],[[7,[[28,[16]],30]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[26,26],[[-1,-2],5,[],[]],[[],26],[6,-1,[]],[6,-1,[]],[-1,[[7,[26]]],8],[6,5],[[26,17],18],[-1,-1,[]],[-1,-1,[]],[[],6],[-1,-2,[],[]],[19,[[7,[26,[32,[31]]]]]],0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[[33,33],34],[[33,17],18],[-1,-1,[]],0,[[],6],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[[-1,-2],5,[],[]],[[],35],[6,-1,[]],[6,-1,[]],[-1,[[7,[35]]],8],[6,5],[[35,17],18],[-1,-1,[]],[-1,-1,[]],[[],6],[-1,-2,[],[]],0,0,0,0,[[35,-1],7,22],0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[[36,[38,[37]]],[[41,[[5,[39,40]],[32,[31]]]]]],[36,[[41,[42,[32,[31]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],43],[6,-1,[]],[6,-1,[]],[6,5],[[-1,44,6],[[45,[44]]],[]],[[43,44,6],[[45,[44]]]],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[],43],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[[-1,-2],5,[],[]],[[],36],[6,-1,[]],[6,-1,[]],[-1,[[7,[36]]],8],[6,5],[[36,36],34],[[-1,-2],34,[],[]],[[-1,-2],34,[],[]],[[-1,-2],34,[],[]],[[36,17],18],[-1,-1,[]],[-1,-1,[]],[19,[[7,[36]]]],[[],6],[-1,-2,[],[]],[36,34],[36,34],[36,34],[36,[[5,[19,19]]]],[-1,-2,[],[]],[36,19],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],46],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[],46],[[-1,44],[[45,[47]]],[]],[[46,44],[[45,[47]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[36,[38,[37]]],[[41,[48,[32,[31]]]]]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[39,42,40],48],[[48,19,35],[[41,[[38,[49]]]]]],[[48,19,35,[38,[[50,[49]]]]],[[0,[51]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[52,52],34],[[52,17],18],[-1,-1,[]],[-1,-1,[]],[[-1,49],[[41,[5]]],[]],[[53,49],[[41,[5]]]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[54,[32,[55]]],53],[-1,[[41,[52]]],[]],[53,[[41,[52]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],0,[[56,56],34],[[56,17],18],[-1,-1,[]],[-1,-1,[]],[[-1,[50,[47]]],[[41,[5]]],[]],[[57,[50,[47]]],[[41,[5]]]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[58,[47]],35,[32,[59]],[32,[60]]],57],[-1,[[41,[56]]],[]],[57,[[41,[56]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[61,[50,[47]]],[[41,[5]]]],[[],6],[-1,-2,[],[]],[35,61],[61,[[41,[56]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[26,62]],"c":[],"p":[[4,"FinishReason",7],[3,"Token",7],[3,"StreamDetails",7],[3,"StreamResponse",7],[15,"tuple"],[15,"usize"],[4,"Result",614],[8,"Deserializer",615],[3,"PrefillToken",7],[3,"BestOfSequence",7],[3,"Details",7],[3,"ErrorResponse",7],[3,"GenerateParameters",7],[3,"GenerateRequest",7],[3,"CompatGenerateRequest",7],[3,"Info",7],[3,"Formatter",616],[6,"Result",616],[15,"str"],[4,"Schema",617],[4,"RefOr",618],[8,"Serializer",619],[3,"GenerateResponse",7],[3,"TypeId",620],[3,"OpenApi",618],[3,"Config",341],[3,"State",621],[3,"Json",622],[8,"IntoResponse",623],[3,"StatusCode",624],[8,"Error",625],[3,"Box",626],[4,"FinishReason",365],[15,"bool"],[3,"GenerateParameter",391],[4,"Models",438],[3,"PathBuf",627],[4,"Option",628],[3,"ModelWeights",629],[4,"Device",630],[6,"Result",631],[3,"Tokenizer",632],[3,"DummyModelProcessor",420],[3,"Tensor",633],[6,"Result",634],[3,"DummySampler",487],[15,"u32"],[3,"TextGeneration",505],[3,"String",635],[3,"Vec",636],[8,"Stream",637],[4,"TextGeneratorResult",522],[3,"TextGenerator",522],[3,"TokenOutputStream",638],[8,"TokenGeneratorTrait",559],[4,"TokenGeneratorResult",559],[3,"TokenGenerator",559],[3,"HashSet",639],[8,"ModelProcessor",420],[8,"Sampler",487],[3,"DummyTokenGenerator",597],[3,"Router",640],[3,"ApiDoc",312],[8,"TextGeneratorTrait",522]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
