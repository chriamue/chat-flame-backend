var searchIndex = JSON.parse('{\
"chat_flame_backend":{"doc":"Chat Flame Backend Library","t":"AAAAAAADDDNDEDDDDNDNDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLMMMMLLLLLLLLLLLLMMMMMMMLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMMDLLLLLLLLLLLLLACACACCCAAFFFFFDLLMLLLLLLLLLLLLFMMLLLLLNENNNENLLLLLLLLLLLLLLLLLLALLLLAAAAAALALLLLLLLLDLLLLLLLLLLLLLLMMMMLMLMLLLLFFDILLLLLLKLLLLLLLLLNNNNNNNNNNNNNNNENNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDILLLLLLLLLLKLLLLLDLLFLLLLLLLLLLLLLNDEIGNLLLLLLLLLLLLLLKLLLLLLKLLLLLLLLLNNDEIGLLLLLLLLLLALLLLKLLLLLLKLLLLLLLLLDLLLLLLLLLLLLLLLF","n":["api","config","llm","server","model","openapi","routes","BestOfSequence","CompatGenerateRequest","Details","EosToken","ErrorResponse","FinishReason","GenerateParameters","GenerateRequest","GenerateResponse","Info","Length","PrefillToken","StopSequence","StreamDetails","StreamResponse","Token","best_of","best_of_sequences","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decoder_input_details","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","details","details","do_sample","docker_label","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","error","error_type","finish_reason","finish_reason","finish_reason","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","generated_text","generated_text","generated_text","generated_tokens","generated_tokens","generated_tokens","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","logprob","logprob","max_batch_total_tokens","max_best_of","max_concurrent_requests","max_input_length","max_new_tokens","max_stop_sequences","max_total_tokens","max_waiting_tokens","model_device_type","model_dtype","model_id","model_pipeline_tag","model_sha","parameters","parameters","prefill","prefill","repetition_penalty","return_full_text","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","seed","seed","seed","seed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sha","special","stop","stream","temperature","text","text","to_owned","to_owned","to_owned","to_owned","token","tokens","tokens","top_k","top_n_tokens","top_p","top_tokens","top_tokens","top_tokens","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typical_p","validation_workers","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting_served_ratio","watermark","ApiDoc","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","openapi","try_from","try_into","type_id","vzip","generate","generate_handler","generate_stream","generate_stream_handler","generate_text","generate_text_handler","get_health_handler","get_info_handler","health","info","generate_handler","generate_stream_handler","generate_text_handler","get_health_handler","get_info_handler","Config","borrow","borrow_mut","cache_dir","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","from_ref","init","into","load_config","model","port","to_owned","try_from","try_into","type_id","vzip","EosToken","FinishReason","Length","Llama","MixFormer","Model","StopSequence","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","forward","from","from","from_ref","generate_parameter","init","init","into","into","loader","model_processor","models","sampler","text_generation","text_generator","to_owned","token_generator","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GenerateParameter","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","from_ref","init","into","max_new_tokens","repeat_last_n","repeat_penalty","seed","serialize","temperature","to_owned","top_p","try_from","try_into","type_id","vzip","create_model","create_tokenizer","DummyModelProcessor","ModelProcessor","borrow","borrow_mut","default","deref","deref_mut","drop","forward","forward","from","init","into","new","try_from","try_into","type_id","vzip","L13b","L13bChat","L13bCode","L34bCode","L70b","L70bChat","L7b","L7bChat","L7bCode","Leo13b","Leo7b","Mistral7b","Mistral7bInstruct","Mixtral","MixtralInstruct","Models","OpenChat35","PhiHermes","PhiV1","PhiV1_5","PhiV2","Starling7bAlpha","Zephyr7bAlpha","Zephyr7bBeta","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_ref","from_str","init","into","is_mistral","is_open_chat","is_phi","is_zephyr","repo_path","to_owned","tokenizer_repo","try_from","try_into","type_id","vzip","DummySampler","Sampler","borrow","borrow_mut","default","deref","deref_mut","drop","from","init","into","new","sample","sample","try_from","try_into","type_id","vzip","TextGeneration","borrow","borrow_mut","create_text_generation","deref","deref_mut","drop","from","init","into","new","run","run_stream","try_from","try_into","type_id","vzip","Finish","TextGenerator","TextGeneratorResult","TextGeneratorTrait","TextProbability","Token","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","from","from","init","init","init","init","into","into","new","next","next","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Finish","Token","TokenGenerator","TokenGeneratorResult","TokenGeneratorTrait","TokenProbability","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","dummy","eq","fmt","from","from","init","init","init","init","into","into","new","next","next","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DummyTokenGenerator","borrow","borrow_mut","deref","deref_mut","drop","from","init","init","into","new","next","try_from","try_into","type_id","vzip","server"],"q":[[0,"chat_flame_backend"],[4,"chat_flame_backend::api"],[7,"chat_flame_backend::api::model"],[312,"chat_flame_backend::api::openapi"],[326,"chat_flame_backend::api::routes"],[336,"chat_flame_backend::api::routes::generate"],[337,"chat_flame_backend::api::routes::generate_stream"],[338,"chat_flame_backend::api::routes::generate_text"],[339,"chat_flame_backend::api::routes::health"],[340,"chat_flame_backend::api::routes::info"],[341,"chat_flame_backend::config"],[365,"chat_flame_backend::llm"],[411,"chat_flame_backend::llm::generate_parameter"],[438,"chat_flame_backend::llm::loader"],[440,"chat_flame_backend::llm::model_processor"],[458,"chat_flame_backend::llm::models"],[512,"chat_flame_backend::llm::sampler"],[530,"chat_flame_backend::llm::text_generation"],[547,"chat_flame_backend::llm::text_generator"],[584,"chat_flame_backend::llm::token_generator"],[622,"chat_flame_backend::llm::token_generator::dummy"],[638,"chat_flame_backend::server"],[639,"core::result"],[640,"serde::de"],[641,"core::fmt"],[642,"core::fmt"],[643,"utoipa::openapi"],[644,"serde::ser"],[645,"core::any"],[646,"utoipa::openapi"],[647,"axum::json"],[648,"axum_core::response"],[649,"http::status"],[650,"axum_core::response::into_response"],[651,"core::error"],[652,"alloc::boxed"],[653,"candle_core::tensor"],[654,"candle_core::error"],[655,"std::path"],[656,"core::option"],[657,"candle_core::device"],[658,"anyhow"],[659,"tokenizers::tokenizer"],[660,"alloc::string"],[661,"alloc::vec"],[662,"futures_core::stream"],[663,"candle_examples::token_output_stream"],[664,"std::collections::hash::set"],[665,"axum::routing"]],"d":["The <code>api</code> module contains the definitions and …","The <code>config</code> module manages the application’s …","The <code>llm</code> (Language Model) module contains the …","The <code>server</code> module is responsible for setting up and …","This module defines the data structures used for API …","","","","","","Generation finished due to reaching the end-of-sequence …","","Enumerates the reasons why text generation may finish.","","","","","Generation finished due to reaching the maximum length.","","Generation finished due to reaching a stop sequence.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the API documentation for the text generation …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Module containing all route handlers.","","","","","","","","This module contains the endpoint for the health check of …","This module contains the endpoint for retrieving model …","Handler for generating text tokens.","Asynchronous handler for generating text through a …","Asynchronous handler for generating text.","Health check endpoint.","Endpoint to get model information.","Configuration for the chat-flame-backend application.","","","Optional path to the directory where cache files are …","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Loads the application configuration from a YAML file.","Model to be used by the server.","Port number on which the server will listen.","","","","","","Generation stopped due to the model producing an …","Enumeration representing the reason why text generation …","Generation stopped because the maximum length was reached.","","","","Generation stopped because a specified stop sequence was …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Parameters for text generation.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Module for loading models.","Processor for language models.","Enumerations for supported models.","Sampling utilities for language models.","Main text generation logic.","Generator for text generation.","","Token generator utilities.","","","","","","","","","Parameters used to generate samples.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Maximum number of new tokens to generate.","The number of last tokens to consider for applying the …","Penalty for repeating tokens.","Seed used for deterministic generation.","","Temperature for sampling.","","Nucleus sampling probability cutoff.","","","","","Creates and loads model weights from the Hugging Face Hub.","Creates and loads a tokenizer from the Hugging Face Hub.","A dummy implementation of <code>ModelProcessor</code> for testing …","A trait for processing model inputs and generating outputs.","","","","","","","Processes an input tensor and generates an output tensor.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new <code>DummyModelProcessor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A dummy implementation of <code>Sampler</code> for testing purposes.","A trait for sampling a token based on logits output.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new <code>DummySampler</code>.","Samples a token based on provided logits.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Indicates the completion of the text generation process.","Handles the text generation process.","Enumerates possible results from a text generation process.","A trait defining the core functionality for text …","Represents the probability associated with a piece of …","Represents a generated piece of text along with its …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the text generation process with a given …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new <code>TextGenerator</code>.","Generates the next piece of text in the sequence.","","","","","","","","","","","","A token generator that generates tokens based on provided …","","A trait defining the behavior of a token generator.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the token generator with a given set of prompt …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>TokenGenerator</code> with the specified parameters.","Retrieves the next token from the generator.","","","","","","","","","","A dummy implementation of the <code>TokenGeneratorTrait</code> used for …","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Creates a new instance of <code>DummyTokenGenerator</code> with …","","","","","","Creates and configures the Axum web server with various …"],"i":[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,13,11,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,3,4,1,2,3,4,13,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,15,16,4,13,13,16,1,2,9,10,11,3,4,12,13,14,23,15,16,12,12,10,11,3,1,2,9,10,11,3,4,13,14,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,3,4,10,4,23,10,11,3,2,9,1,2,9,10,11,3,4,12,13,14,23,15,16,14,15,1,2,9,10,11,3,4,12,13,14,23,15,16,2,9,16,16,16,16,13,16,16,16,16,16,16,16,16,14,15,10,11,13,13,1,2,9,10,11,3,4,12,13,14,23,15,16,10,11,3,13,1,2,9,10,11,3,4,12,13,23,15,16,16,2,13,15,13,2,9,1,2,3,4,4,10,11,13,13,13,10,11,4,13,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,1,2,9,10,11,3,4,12,13,14,23,15,16,13,16,16,1,2,9,10,11,3,4,12,13,14,23,15,16,16,13,0,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,35,0,35,34,34,0,35,35,34,35,34,34,34,35,34,35,34,35,34,35,35,34,35,34,34,0,35,34,35,34,0,0,0,0,0,0,34,0,35,34,35,34,35,34,35,34,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,46,46,46,46,46,46,60,46,46,46,46,46,46,46,46,46,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,47,47,47,47,47,47,47,47,47,47,61,47,47,47,47,47,0,49,49,0,49,49,49,49,49,49,49,49,49,49,49,49,49,53,0,0,0,0,53,54,53,54,53,54,53,54,53,54,53,53,53,54,53,65,54,54,53,54,53,54,65,54,54,53,54,53,54,53,54,53,57,57,0,0,0,0,58,57,58,57,58,57,58,57,58,57,0,57,57,58,57,56,58,58,57,58,57,58,56,58,58,57,58,57,58,57,58,57,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[7,[1]]],8],[-1,[[7,[2]]],8],[-1,[[7,[9]]],8],[-1,[[7,[10]]],8],[-1,[[7,[11]]],8],[-1,[[7,[3]]],8],[-1,[[7,[4]]],8],[-1,[[7,[12]]],8],[-1,[[7,[13]]],8],[-1,[[7,[14]]],8],[-1,[[7,[15]]],8],[-1,[[7,[16]]],8],0,0,0,0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,[[1,17],18],[[2,17],18],[[9,17],18],[[10,17],18],[[11,17],18],[[3,17],18],[[4,17],18],[[13,17],18],[[14,17],18],[[15,17],18],[[16,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],[[],[[5,[19,[21,[20]]]]]],0,0,0,0,[[1,-1],7,22],[[2,-1],7,22],[[9,-1],7,22],[[10,-1],7,22],[[11,-1],7,22],[[3,-1],7,22],[[4,-1],7,22],[[12,-1],7,22],[[13,-1],7,22],[[23,-1],7,22],[[15,-1],7,22],[[16,-1],7,22],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[],25],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[[27,[26]],[28,[15]]],[[7,[29,[5,[30,[28,[12]]]]]]]],[[[27,[26]],[28,[14]]],[[0,[31]]]],[[[27,[26]],[28,[14]]],[[0,[31]]]],[[],[[0,[31]]]],[[[27,[26]]],[[7,[[28,[16]],30]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[26,26],[[-1,-2],5,[],[]],[[],26],[6,-1,[]],[6,-1,[]],[-1,[[7,[26]]],8],[6,5],[[26,17],18],[-1,-1,[]],[-1,-1,[]],[[],6],[-1,-2,[],[]],[19,[[7,[26,[33,[32]]]]]],0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[35,35],36],[[35,17],18],[[34,37,6],[[38,[37]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[39,39],[[-1,-2],5,[],[]],[[],39],[6,-1,[]],[6,-1,[]],[-1,[[7,[39]]],8],[6,5],[[39,17],18],[-1,-1,[]],[-1,-1,[]],[[],6],[-1,-2,[],[]],0,0,0,0,[[39,-1],7,22],0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[[40,[42,[41]]],[[44,[[5,[34,43]],[33,[32]]]]]],[40,[[44,[45,[33,[32]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],46],[6,-1,[]],[6,-1,[]],[6,5],[[-1,37,6],[[38,[37]]],[]],[[46,37,6],[[38,[37]]]],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[],46],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[40,40],[[-1,-2],5,[],[]],[[],40],[6,-1,[]],[6,-1,[]],[-1,[[7,[40]]],8],[6,5],[[40,40],36],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[40,17],18],[-1,-1,[]],[-1,-1,[]],[19,[[7,[40]]]],[[],6],[-1,-2,[],[]],[40,36],[40,36],[40,36],[40,36],[40,[[5,[19,19]]]],[-1,-2,[],[]],[40,19],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],47],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[],47],[[-1,37],[[38,[48]]],[]],[[47,37],[[38,[48]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[40,[42,[41]]],[[44,[49,[33,[32]]]]]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[34,45,43],49],[[49,19,39],[[44,[[42,[50]]]]]],[[49,19,39,[42,[[51,[50]]]]],[[0,[52]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[53,53],36],[[53,17],18],[-1,-1,[]],[-1,-1,[]],[[-1,50],[[44,[5]]],[]],[[],6],[[54,50],[[44,[5]]]],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[55,[33,[56]]],54],[-1,[[44,[53]]],[]],[54,[[44,[53]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],0,[[57,57],36],[[57,17],18],[-1,-1,[]],[-1,-1,[]],[[-1,[51,[48]]],[[44,[5]]],[]],[[58,[51,[48]]],[[44,[5]]]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[48]],39,[33,[60]],[33,[61]]],58],[-1,[[44,[57]]],[]],[58,[[44,[57]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[[62,[51,[48]]],[[44,[5]]]],[-1,-2,[],[]],[39,62],[62,[[44,[57]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[26,63]],"c":[],"p":[[4,"FinishReason",7],[3,"Token",7],[3,"StreamDetails",7],[3,"StreamResponse",7],[15,"tuple"],[15,"usize"],[4,"Result",639],[8,"Deserializer",640],[3,"PrefillToken",7],[3,"BestOfSequence",7],[3,"Details",7],[3,"ErrorResponse",7],[3,"GenerateParameters",7],[3,"GenerateRequest",7],[3,"CompatGenerateRequest",7],[3,"Info",7],[3,"Formatter",641],[6,"Result",641],[15,"str"],[4,"Schema",642],[4,"RefOr",643],[8,"Serializer",644],[3,"GenerateResponse",7],[3,"TypeId",645],[3,"OpenApi",643],[3,"Config",341],[3,"State",646],[3,"Json",647],[6,"Response",648],[3,"StatusCode",649],[8,"IntoResponse",650],[8,"Error",651],[3,"Box",652],[4,"Model",365],[4,"FinishReason",365],[15,"bool"],[3,"Tensor",653],[6,"Result",654],[3,"GenerateParameter",411],[4,"Models",458],[3,"PathBuf",655],[4,"Option",656],[4,"Device",657],[6,"Result",658],[3,"Tokenizer",659],[3,"DummyModelProcessor",440],[3,"DummySampler",512],[15,"u32"],[3,"TextGeneration",530],[3,"String",660],[3,"Vec",661],[8,"Stream",662],[4,"TextGeneratorResult",547],[3,"TextGenerator",547],[3,"TokenOutputStream",663],[8,"TokenGeneratorTrait",584],[4,"TokenGeneratorResult",584],[3,"TokenGenerator",584],[3,"HashSet",664],[8,"ModelProcessor",440],[8,"Sampler",512],[3,"DummyTokenGenerator",622],[3,"Router",665],[3,"ApiDoc",312],[8,"TextGeneratorTrait",547]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
